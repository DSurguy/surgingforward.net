---
export const prerender = false;

import {
  GITHUB_TOKEN
} from 'astro:env/server'
import type { Release } from '@/types'
import ProjectReleaseDetail from '@/components/react/ProjectReleaseDetail'

const { repositoryUrl } = Astro.props;

const queryParams = new URLSearchParams();
queryParams.set("page", "1");
queryParams.set("per_page", "5")

const request = new Request(`${repositoryUrl.replace('https://github.com', 'https://api.github.com/repos')}/releases?${queryParams.toString()}`, {
  method: 'GET',
  headers: {
    'User-Agent': 'DSurguy',
    'Accept': 'application/vnd.github+json',
    'Authorization': `Bearer ${GITHUB_TOKEN}`,
    'X-Github-Api-Version': '2022-11-28'
  }  
})
const response = await fetch(request)

const releases = (await response.json()).map((release: any) => {
  return {
    id: release.id,
    html_url: release.html_url,
    name: release.name,
    tag: release.tag_name,
    body: release.body,
    publishedAt: Date.parse(release.published_at),
  }
}) as Release[]

Astro.response.headers.set('Cache-Control', 'public, max-age=3600')
---

<div class="p-4">
  {releases.map(release => <ProjectReleaseDetail release={release} /> )}
</div>